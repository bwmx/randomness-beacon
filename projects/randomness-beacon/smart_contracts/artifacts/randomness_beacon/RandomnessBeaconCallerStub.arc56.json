{
    "name": "RandomnessBeaconCallerStub",
    "structs": {},
    "methods": [
        {
            "name": "fulfillRandomness",
            "args": [
                {
                    "type": "uint64",
                    "name": "requestId"
                },
                {
                    "type": "address",
                    "name": "requesterAddress"
                },
                {
                    "type": "byte[64]",
                    "name": "output"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A stub class representing the interface of the caller contract that will receive the VRF output\nonly fulfillRandomness is required",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        25
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        38
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        28
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        29
                    ],
                    "errorMessage": "not implemented"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmFuZG9tbmVzc19iZWFjb24vdHlwZXMuYWxnby50czo5MwogICAgLy8gZXhwb3J0IGNsYXNzIFJhbmRvbW5lc3NCZWFjb25DYWxsZXJTdHViIGV4dGVuZHMgQ29udHJhY3QgaW1wbGVtZW50cyBSYW5kb21uZXNzQmVhY29uQ2FsbGVyIHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A2CiAgICBwdXNoYnl0ZXMgMHg0MmNiZmU0YyAvLyBtZXRob2QgImZ1bGZpbGxSYW5kb21uZXNzKHVpbnQ2NCxhZGRyZXNzLGJ5dGVbNjRdKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2Z1bGZpbGxSYW5kb21uZXNzX3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yYW5kb21uZXNzX2JlYWNvbi90eXBlcy5hbGdvLnRzOjkzCiAgICAvLyBleHBvcnQgY2xhc3MgUmFuZG9tbmVzc0JlYWNvbkNhbGxlclN0dWIgZXh0ZW5kcyBDb250cmFjdCBpbXBsZW1lbnRzIFJhbmRvbW5lc3NCZWFjb25DYWxsZXIgewogICAgcHVzaGludCAwIC8vIDAKICAgIHJldHVybgoKbWFpbl9mdWxmaWxsUmFuZG9tbmVzc19yb3V0ZUAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JhbmRvbW5lc3NfYmVhY29uL3R5cGVzLmFsZ28udHM6OTUKICAgIC8vIEBhYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBzbWFydF9jb250cmFjdHMvcmFuZG9tbmVzc19iZWFjb24vdHlwZXMuYWxnby50czoxMDEKICAgIC8vIGVycignbm90IGltcGxlbWVudGVkJykKICAgIGVyciAvLyBub3QgaW1wbGVtZW50ZWQKCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmFuZG9tbmVzc19iZWFjb24vdHlwZXMuYWxnby50czo5MwogICAgLy8gZXhwb3J0IGNsYXNzIFJhbmRvbW5lc3NCZWFjb25DYWxsZXJTdHViIGV4dGVuZHMgQ29udHJhY3QgaW1wbGVtZW50cyBSYW5kb21uZXNzQmVhY29uQ2FsbGVyIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CjEbQQAYgARCy/5MNhoAjgEAA4EAQzEZFEQxGEQAMRlA//AxGBREgQFD",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}