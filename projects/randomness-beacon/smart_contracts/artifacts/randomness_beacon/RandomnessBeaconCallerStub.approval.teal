#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // smart_contracts/randomness_beacon/types.algo.ts:93
    // export class RandomnessBeaconCallerStub extends Contract implements RandomnessBeaconCaller {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x42cbfe4c // method "fulfillRandomness(uint64,address,byte[64])void"
    txna ApplicationArgs 0
    match main_fulfillRandomness_route@3

main_after_if_else@10:
    // smart_contracts/randomness_beacon/types.algo.ts:93
    // export class RandomnessBeaconCallerStub extends Contract implements RandomnessBeaconCaller {
    pushint 0 // 0
    return

main_fulfillRandomness_route@3:
    // smart_contracts/randomness_beacon/types.algo.ts:95
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/randomness_beacon/types.algo.ts:101
    // err('not implemented')
    err // not implemented

main_bare_routing@6:
    // smart_contracts/randomness_beacon/types.algo.ts:93
    // export class RandomnessBeaconCallerStub extends Contract implements RandomnessBeaconCaller {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return
